{
    "name": "bake",
    "displayName": "bake",
    "description": "Support for bake based projects (bake is a build tool, see http://esrlabs.github.io/bake/)",
    "version": "0.6.2",
    "publisher": "elektronenhirn",
    "engines": {
        "vscode": "^1.18.0"
    },
    "license": "MIT license",
    "icon": "logo_conformant_128.png",
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "workspaceContains:**/Project.meta"
    ],
    "main": "./out/extension",
    "contributes": {
        "languages": [
            {
                "id": "bake",
                "aliases": [
                    "Bake"
                ],
                "extensions": [
                    "Project.meta", "Adapt.meta"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "bake",
                "scopeName": "source.bake",
                "path": "./syntaxes/bake.tmLanguage.json"
            }
        ],
        "commands": [
            {
                "command": "bake.createNewHeaderFile",
                "title": "New .h File"
            },
            {
                "command": "bake.createNewCppFile",
                "title": "New .cpp File"
            },
            {
                "command": "bake.importIncludesAndDefines",
                "title": "Import C++ Includes and Defines from Bake"
            },
            {
                "command": "bake.cleanIncludesAndDefines",
                "title": "Clean imported C++ Includes and Defines from Bake"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "bake configuration",
            "properties": {
                "bake.parallelBuildNum": {
                    "type": "integer",
                    "default": 8,
                    "description": "The number of files bake shall build in parallel."
                },
                "bake.unitTestsAdapt": {
                    "type": "string",
                    "default": "gcc",
                    "description": "If unit tests targets are detected, call bake with adapt."
                },
                "bake.runUnitTestsOnBuild": {
                    "type": "boolean",
                    "default": true,
                    "description": "Will execute the build unit tests after a successfull build."
                },
                "bake.defaultPromblemMatcher": {
                    "type": "string",
                    "default": "$gcc",
                    "description": "Problem matcher for build output."
                },
                "bake.buildVariants": {
                    "type": "object",
                    "default": {
                        "ExampleVariant": {
                            "project": "Spaceship3",
                            "config": "arm-x64",
                            "adapt": "host,unittest",
                            "default": "true"
                        }
                    },
                    "description": "list build variants (project/config combinations) you want to use to generate imports and defines from"
                }
            }
        },
        "menus": {
            "explorer/context": [
                {
                    "command": "bake.createNewHeaderFile"
                },
                {
                    "command": "bake.createNewCppFile"
                }
            ]
        },
        "taskDefinitions": [
            {
                "type": "bake",
                "properties": {
                    "target": { "type": "string", "description": "Target in Project.meta" },
                    "file": { "type": "string", "description": "Project.meta file" }
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "typescript": "^2.6.1",
        "vscode": "^1.1.6",
        "@types/node": "^7.0.43",
        "@types/mocha": "^2.2.42"
    },
    "dependencies": {
        "deepmerge": "^2.0.1",
        "dot": "^1.1.2",
        "jsonfile": "^4.0.0"
    }
}
