"use strict";

import FileTemplateBase from "./FileTemplateBase";

const DEFAULT_TEMPLATE = `{{
    /* Template for .h files - autogenerated - customize it to fit your needs!

    The format of the template needs to comply with doT.js (see http://olado.github.io/doT/).

    Values which can be substituted:
    - file.name filename without ending
    - file.year current year
    - file.namespaces array of detected namespaces
    */
}}
/*
 * Copyright (c) {{=file.year}} ESR Labs AG. All rights reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of ESR Labs and its suppliers, if any.
 * The intellectual and technical concepts contained herein are
 * proprietary to ESR Labs and its suppliers and may be covered
 * by German and Foreign Patents, patents in process, and are protected
 * by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from ESR Labs.
 */

{{    let guardPrefix = file.namespaces.reduce((prev,curr)=>{
        return prev + curr.toUpperCase() + '_';
        },"");
      let guard = guardPrefix+file.name.toUpperCase()+'_H_';}}
#ifndef {{=guard}}
#define {{=guard}}
{{ for (let n in file.namespaces) { }}
namespace {{=file.namespaces[n]}} { {{ } }}

class {{=file.name}}{

public:
    {{=file.name}}();
    virtual ~{{=file.name}}();
};
{{ file.namespaces.reverse(); for (let n in file.namespaces) { }}
} /* namespace {{=file.namespaces[n]}} */ {{ } }}

#endif // {{=guard}}
`;
const TEMPLATE_FILENAME = "template.h";

class HeaderFileTemplate extends FileTemplateBase {

    public doGetFilename(): string {
        return TEMPLATE_FILENAME;
    }

    public doGetDefaultContent(): string {
        return DEFAULT_TEMPLATE;
    }
}

export default HeaderFileTemplate;
